/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package currencygui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Jose maria - Fabian 
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        euroToDolar.setSelected(true);
        outputCurrency.setEditable(false);
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeOfExchange = new javax.swing.ButtonGroup();
        title = new javax.swing.JLabel();
        exchange = new javax.swing.JButton();
        outputCurrency = new javax.swing.JTextField();
        inputCurrency = new javax.swing.JFormattedTextField();
        euroToDolar = new javax.swing.JRadioButton();
        dolarToEuro = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 0, 204));

        title.setBackground(new java.awt.Color(102, 102, 255));
        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setText("Currency Converter");

        exchange.setText("Exchange");
        exchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exchangeActionPerformed(evt);
            }
        });

        outputCurrency.setToolTipText("");

        inputCurrency.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        inputCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCurrencyActionPerformed(evt);
            }
        });
        inputCurrency.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputCurrencyKeyTyped(evt);
            }
        });

        typeOfExchange.add(euroToDolar);
        euroToDolar.setText("EUR - USD");
        euroToDolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                euroToDolarActionPerformed(evt);
            }
        });

        typeOfExchange.add(dolarToEuro);
        dolarToEuro.setText("USD - EUR");
        dolarToEuro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dolarToEuroActionPerformed(evt);
            }
        });

        jLabel1.setText("€");

        jLabel2.setText("$");

        jLabel3.setText("© José & Fabián");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(euroToDolar)
                                .addComponent(dolarToEuro))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(exchange)))
                        .addGap(15, 15, 15)
                        .addComponent(outputCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(title)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(outputCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(exchange)
                    .addComponent(inputCurrency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(euroToDolar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dolarToEuro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCurrencyActionPerformed
        
    }//GEN-LAST:event_inputCurrencyActionPerformed

    private void exchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exchangeActionPerformed
        if (inputCurrency.getText().equals("0,00")){
            outputCurrency.setText("0,00");
            return;
        } 
        if (!inputCurrency.getText().equals("")){
            String value = inputCurrency.getText();
            
            String exchang;
            
            if (euroToDolar.isSelected()){
                exchang = "https://api.exchangerate.host/convert?from=EUR&to=USD&amount=" + value.replace(',', '.');
                inputCurrency.setText(value);
            } else { 
                exchang = "https://api.exchangerate.host/convert?from=USD&to=EUR&amount=" + value.replace(',', '.');
                inputCurrency.setText(value);
            }
                        
            DecimalFormat df = new DecimalFormat("###.##");
            Float res = Float.parseFloat(exchangeTo(exchang));
                        
            outputCurrency.setText(df.format(res));
            
        }        
    }//GEN-LAST:event_exchangeActionPerformed
    
    private void inputCurrencyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCurrencyKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c) && c != ',' && c != '.' && c != '\b'){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Introduce only numbers");
        }
                
        if (inputCurrency.getText().indexOf(',') == -1 && inputCurrency.getText().indexOf('.') == -1){
            
            if (c == '.'){ 
                evt.setKeyChar(',');
            } 
            
        } else if (c == ',' || c == '.'){
            evt.consume();            
        }   
    }//GEN-LAST:event_inputCurrencyKeyTyped

    private void dolarToEuroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dolarToEuroActionPerformed
        if(dolarToEuro.isSelected()){
            jLabel1.setText("$");
            jLabel2.setText("€");
        }
    }//GEN-LAST:event_dolarToEuroActionPerformed

    private void euroToDolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_euroToDolarActionPerformed
        if(euroToDolar.isSelected()){
            jLabel1.setText("€");
            jLabel2.setText("$");
        }
    }//GEN-LAST:event_euroToDolarActionPerformed

    public String exchangeTo(String urlString) {
        URL url;
        String value = "0";
        try {            
            url = new URL(urlString);
                        
            URLConnection connection = url.openConnection();
            
            BufferedReader reader =
                    new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String line = reader.readLine();
            value = line.substring(line.lastIndexOf(':')+1, line.lastIndexOf('}'));     
            
        } catch (MalformedURLException ex){
            System.out.println("ERROR::getExchangeRate::MalformedURL: " + ex.getMessage());
        }catch (IOException ex) {
            System.out.println("ERROR::getExchangeRate::IOException: " + ex.getMessage());
        } 
        
        return value;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton dolarToEuro;
    private javax.swing.JRadioButton euroToDolar;
    private javax.swing.JButton exchange;
    private javax.swing.JFormattedTextField inputCurrency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField outputCurrency;
    private javax.swing.JLabel title;
    private javax.swing.ButtonGroup typeOfExchange;
    // End of variables declaration//GEN-END:variables
}
